1. Создание нового заказа
POST /api/orders

Описание:
Создает новый заказ в системе.

Запрос:
URL: https://api.test/api/orders
Метод: POST
Тело запроса (JSON):
{
    "order_number": "12345", - Уникальный номер заказа (строка), обязательно
    "total_amount": 500.50,  - Общая сумма заказа (число), обязательно
    "items": [
        {
            "product_name": "Product 1", - Название продукта (строка), обязательно
            "quantity": 2,               - Количество (целое число), обязательно
            "price": 100.25              - Цена за единицу (число), обязательно
        },
        {
            "product_name": "Product 2",  - Название продукта (строка)
            "quantity": 1,                - Количество (целое число)
            "price": 300.25               -/ Цена за единицу (число)
        }
    ]
}


Ответ:
Успешный ответ (HTTP Status 201):
{
    "id": 1,
    "order_number": "12345",
    "status": "pending",
    "total_amount": 500.50,
    "items": [
        {
            "product_name": "Product 1",
            "quantity": 2,
            "price": 100.25
        },
        {
            "product_name": "Product 2",
            "quantity": 1,
            "price": 300.25
        }
    ]
}

Ошибка валидации (HTTP Status 422)Ж
{
    "errors": {
        "total_amount": ["The total amount field is required."]
    }
}

==========================================================================

2. Просмотр заказа по номеру
GET /api/orders/{order_number}

Описание:
Возвращает подробную информацию о заказе по уникальному номеру заказа.

Запрос:
URL: /api/orders/{order_number}
Метод: GET
Параметры:
{order_number} — уникальный номер заказа.

Ответ:

Успешный ответ (HTTP Status 200):
{
    "id": 1,
    "order_number": "12345",
    "status": "pending",
    "total_amount": 500.50,
    "items": [
        {
            "product_name": "Product 1",
            "quantity": 2,
            "price": 100.25
        },
        {
            "product_name": "Product 2",
            "quantity": 1,
            "price": 300.25
        }
    ]
}

Ошибка (например, заказ не найден) (HTTP Status 404):
{
    "error": "Order not found"
}

=================================================================

3. Получение списка заказов
GET /api/orders

Описание:
Возвращает список всех заказов. Можно фильтровать по статусу.

Запрос:
URL: /api/orders
Метод: GET
Параметры:
status (опционально) — фильтрация заказов по статусу (например, pending, completed).

Ответ:

Успешный ответ (HTTP Status 200):
[
    {
        "id": 1,
        "order_number": "12345",
        "status": "pending",
        "total_amount": 500.50,
        "items": [
            {
                "product_name": "Product 1",
                "quantity": 2,
                "price": 100.25
            },
            {
                "product_name": "Product 2",
                "quantity": 1,
                "price": 300.25
            }
        ]
    },
    {
        "id": 2,
        "order_number": "12346",
        "status": "completed",
        "total_amount": 100.00,
        "items": [
            {
                "product_name": "Product 3",
                "quantity": 1,
                "price": 100.00
            }
        ]
    }
]


